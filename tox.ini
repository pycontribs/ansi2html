[tox]
minversion = 3.9.0
envlist =
    lint
    py{36,37,38,39}
    packaging

isolated_build = True
[testenv]
setenv =
    PYTHONWARNINGS=error::FutureWarning
    # Aim to replace with below once other issues are fixed:
    # PYTHONWARNINGS=error
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
deps =
    mock
    pytest
    pytest-cov
sitepackages = False
commands = python -m pytest -ra --cov=ansi2html --no-cov-on-fail --cov-append --cov-report=xml:{toxworkdir}/coverage-{envname}.xml

[testenv:lint]
description = Runs all linting tasks
commands =
    # to run a single linter you can do "pre-commit run flake8"
    python -m pre_commit run {posargs:--all}
deps = pre-commit>=1.18.1
extras =
skip_install = true
usedevelop = false

[testenv:packaging]
description =
    Do packaging/distribution. If tag is not present or PEP440 compliant upload to
    PYPI could fail
# `usedevelop = true` overrides `skip_install` instruction, it's unwanted
usedevelop = false
# don't install molecule itself in this env
skip_install = true
deps =
    collective.checkdocs >= 0.2
    build >= 0.7.0
    pip >= 20.2.2
    toml >= 0.10.1
    twine >= 3.2.0  # pyup: ignore
setenv =
commands =
    rm -rfv {toxinidir}/dist/
    python -m build \
      --outdir {toxinidir}/dist/ \
      {toxinidir}
    # metadata validation
    sh -c "python -m twine check {toxinidir}/dist/*"
whitelist_externals =
    rm
    sh

[testenv:docs]
description = Generate Sphinx docs under build/docs
extras = docs
deps =
    setuptools_scm
commands =
    sphinx-build -aE -b linkcheck {toxinidir}/docs/source {toxinidir}/build/docs
    sphinx-build -aE -b html {toxinidir}/docs/source {toxinidir}/build/docs
