[tox]
minversion = 4.0.0
envlist =
    lint
    py
    pkg
isolated_build = True

[testenv]
setenv =
    PYTHONWARNINGS=error::FutureWarning
    # Aim to replace with below once other issues are fixed:
    # PYTHONWARNINGS=error
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
deps =
    pytest
    pytest-cov
sitepackages = False
usedevelop = True
commands = python -m pytest -ra --cov=ansi2html --no-cov-on-fail --cov-append --cov-report=xml:{toxworkdir}/coverage-{envname}.xml

[testenv:lint]
description = Runs all linting tasks
commands =
    # to run a single linter you can do "pre-commit run flake8"
    python -m pre_commit run {posargs:--all}
deps = pre-commit>=1.18.1
extras =
skip_install = true
usedevelop = false

[testenv:pkg]
description =
    Do packaging/distribution. If tag is not present or PEP440 compliant upload to
    PYPI could fail
usedevelop = true
skip_install = false # needed by argparse-manpage
deps =
    build >= 0.10.0
    twine >= 4.0.2  # pyup: ignore
    argparse-manpage
setenv =
commands =
    argparse-manpage --module ansi2html.converter --function get_parser --output man/ansi2html.1
    rm -rfv {toxinidir}/dist/
    python -m build --outdir {toxinidir}/dist/ {toxinidir}
    # metadata validation
    sh -c "python -m twine check --strict {toxinidir}/dist/*"
allowlist_externals =
    rm
    sh

[testenv:docs]
description = Generate Sphinx docs under build/docs
extras = docs
commands =
    mkdocs build --strict
allowlist_externals =
    sh
